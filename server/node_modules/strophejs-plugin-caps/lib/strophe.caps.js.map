{"version":3,"file":"strophe.caps.js","sources":["../src/strophe.caps.js"],"sourcesContent":["import { Strophe, b64_sha1 } from 'strophe.js';\nimport 'strophejs-plugin-disco';\n\n Strophe.addConnectionPlugin('caps', {\n\t/** Constant: HASH\n\t * Hash used\n\t *\n\t * Currently only sha-1 is supported.\n\t */\n\tHASH: 'sha-1',\n\t/** Variable: node\n\t * Client which is being used.\n\t *\n\t * Can be overwritten as soon as Strophe has been initialized.\n\t */\n\tnode: 'http://strophe.im/strophejs/',\n\t/** PrivateVariable: _ver\n\t * Own generated version string\n\t */\n\t_ver: '',\n\t/** PrivateVariable: _connection\n\t * Strophe connection\n\t */\n\t_connection: null,\n\t/** PrivateVariable: _knownCapabilities\n\t * A hashtable containing version-strings and their capabilities, serialized\n\t * as string.\n\t *\n\t * TODO: Maybe those caps shouldn't be serialized.\n\t */\n\t_knownCapabilities: {},\n\t/** PrivateVariable: _jidVerIndex\n\t * A hashtable containing jids and their versions for better lookup of capabilities.\n\t */\n\t_jidVerIndex: {},\n\n\t/** Function: init\n\t * Initialize plugin:\n\t *   - Add caps namespace\n\t *   - Add caps feature to disco plugin\n\t *   - Add handler for caps stanzas\n\t *\n\t * Parameters:\n\t *   (Strophe.Connection) conn - Strophe connection\n\t */\n\tinit: function(conn) {\n\t\tthis._connection = conn;\n\n\t\tStrophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\n\n\t\tif (!this._connection.disco) {\n\t\t\tthrow \"Caps plugin requires the disco plugin to be installed.\";\n\t\t}\n\n\t\tthis._connection.disco.addFeature(Strophe.NS.CAPS);\n\t\tthis._connection.addHandler(this._delegateCapabilities.bind(this), Strophe.NS.CAPS);\n\t},\n\n\t/** Function: generateCapsAttrs\n\t * Returns the attributes for generating the \"c\"-stanza containing the own version\n\t *\n\t * Returns:\n\t *   (Object) - attributes\n\t */\n\tgenerateCapsAttrs: function() {\n\t\treturn {\n\t\t\t'xmlns': Strophe.NS.CAPS,\n\t\t\t'hash': this.HASH,\n\t\t\t'node': this.node,\n\t\t\t'ver': this.generateVer()\n\t\t};\n\t},\n\n\t/** Function: generateVer\n\t * Returns the base64 encoded version string (encoded itself with sha1)\n\t *\n\t * Returns:\n\t *   (String) - version\n\t */\n\tgenerateVer: function() {\n\t\tif (this._ver !== \"\") {\n\t\t\treturn this._ver;\n\t\t}\n\n\t\tvar ver = \"\",\n\t\t\tidentities = this._connection.disco._identities.sort(this._sortIdentities),\n\t\t\tidentitiesLen = identities.length,\n\t\t\tfeatures = this._connection.disco._features.sort(),\n\t\t\tfeaturesLen = features.length;\n\t\tfor(var i = 0; i < identitiesLen; i++) {\n\t\t\tvar curIdent = identities[i];\n\t\t\tver += curIdent.category + \"/\" + curIdent.type + \"/\" + curIdent.lang + \"/\" + curIdent.name + \"<\";\n\t\t}\n\t\tfor(var i = 0; i < featuresLen; i++) {\n\t\t\tver += features[i] + '<';\n\t\t}\n\n\t\tthis._ver = b64_sha1(ver);\n\t\treturn this._ver;\n\t},\n\n\t/** Function: getCapabilitiesByJid\n\t * Returns serialized capabilities of a jid (if available).\n\t * Otherwise null.\n\t *\n\t * Parameters:\n\t *   (String) jid - Jabber id\n\t *\n\t * Returns:\n\t *   (String|null) - capabilities, serialized; or null when not available.\n\t */\n\tgetCapabilitiesByJid: function(jid) {\n\t\tif (this._jidVerIndex[jid]) {\n\t\t\treturn this._knownCapabilities[this._jidVerIndex[jid]];\n\t\t}\n\t\treturn null;\n\t},\n\n\t/** PrivateFunction: _delegateCapabilities\n\t * Checks if the version has already been saved.\n\t * If yes: do nothing.\n\t * If no: Request capabilities\n\t *\n\t * Parameters:\n\t *   (Strophe.Builder) stanza - Stanza\n\t *\n\t * Returns:\n\t *   (Boolean)\n\t */\n\t_delegateCapabilities: function(stanza) {\n\t\tvar from = stanza.getAttribute('from'),\n\t\t\tc = stanza.getElementsByTagName('c')[0],\n\t\t\tver = c.getAttribute('ver'),\n\t\t\tnode = c.getAttribute('node');\n\t\tif (!this._knownCapabilities[ver]) {\n\t\t\treturn this._requestCapabilities(from, node, ver);\n\t\t} else {\n\t\t\tthis._jidVerIndex[from] = ver;\n\t\t}\n\t\tif (!this._jidVerIndex[from] || !this._jidVerIndex[from] !== ver) {\n\t\t\tthis._jidVerIndex[from] = ver;\n\t\t}\n\t\treturn true;\n\t},\n\n\t/** PrivateFunction: _requestCapabilities\n\t * Requests capabilities from the one which sent the caps-info stanza.\n\t * This is done using disco info.\n\t *\n\t * Additionally, it registers a handler for handling the reply.\n\t *\n\t * Parameters:\n\t *   (String) to - Destination jid\n\t *   (String) node - Node attribute of the caps-stanza\n\t *   (String) ver - Version of the caps-stanza\n\t *\n\t * Returns:\n\t *   (Boolean) - true\n\t */\n\t_requestCapabilities: function(to, node, ver) {\n\t\tif (to !== this._connection.jid) {\n\t\t\tvar id = this._connection.disco.info(to, node + '#' + ver);\n\t\t\tthis._connection.addHandler(this._handleDiscoInfoReply.bind(this), Strophe.NS.DISCO_INFO, 'iq', 'result', id, to);\n\t\t}\n\t\treturn true;\n\t},\n\n\t/** PrivateFunction: _handleDiscoInfoReply\n\t * Parses the disco info reply and adds the version & it's capabilities to the _knownCapabilities variable.\n\t * Additionally, it adds the jid & the version to the _jidVerIndex variable for a better lookup.\n\t *\n\t * Parameters:\n\t *   (Strophe.Builder) stanza - Disco info stanza\n\t *\n\t * Returns:\n\t *   (Boolean) - false, to automatically remove the handler.\n\t */\n\t_handleDiscoInfoReply: function(stanza) {\n\t\tvar query = stanza.getElementsByTagName('query')[0],\n\t\t\tnode = query.getAttribute('node').split('#'),\n\t\t\tver = node[1],\n\t\t\tfrom = stanza.getAttribute('from');\n\t\tif (!this._knownCapabilities[ver]) {\n\t\t\tvar childNodes = query.childNodes,\n\t\t\t\tchildNodesLen = childNodes.length;\n\t\t\tthis._knownCapabilities[ver] = [];\n\t\t\tfor(var i = 0; i < childNodesLen; i++) {\n\t\t\t\tvar node =childNodes[i];\n\t\t\t\tthis._knownCapabilities[ver].push({name: node.nodeName, attributes: node.attributes});\n\t\t\t}\n\t\t\tthis._jidVerIndex[from] = ver;\n\t\t} else if (!this._jidVerIndex[from] || !this._jidVerIndex[from] !== ver) {\n\t\t\tthis._jidVerIndex[from] = ver;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/** PrivateFunction: _sortIdentities\n\t * Sorts two identities according the sorting requirements in XEP-0115.\n\t *\n\t * Parameters:\n\t *   (Object) a - Identity a\n\t *   (Object) b - Identity b\n\t *\n\t * Returns:\n\t *   (Integer) - 1, 0 or -1; according to which one's greater.\n\t */\n\t_sortIdentities: function(a, b) {\n\t\tif (a.category > b.category) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.category < b.category) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.type > b.type) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.type < b.type) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.lang > b.lang) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (a.lang < b.lang) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t}\n });\n"],"names":["Strophe","b64_sha1"],"mappings":"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"}